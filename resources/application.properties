##################################################################
# appication.properties 
# this file should be located under ./resources directory
# if not then you need to specify file by system property "application.properties.file"
#
##################################################################
#provide base URL of application under test 
env.baseurl=
env.resources=src/main/resources/common
resources.load.subdirs=2
scenario.file.loc=src/main/resources/scenarios

#For Chrome
#webdriver.chrome.driver=F:\\Quantum-Starter-Kit-master\\driver\\chromedriver.exe
#driver.name=ChromeDriver

#set appropriate teststep provider package
step.provider.pkg=com.quantum.steps
#[selenium]

#For geko
webdriver.geko.driver=F:\\Quantum-Starter-Kit-master\\driver\\geckodriver.exe
driver.name=FirefoxDriver

#For IE Browser
#
#webdriver.ie.driver=F:\\Quantum-Starter-Kit-master\\driver\\IEDriverServer.exe
#driver.name=InternetExplorer
#TODO
#environmentName=communitySheet
#authenticationData=C:\\Users\\kumar\\Desktop\\quantum framework\\trunk\\src\\main\\resources\\data\\testData.xls
#driver.name=ChromeDriver

#remote.server=https://<<CQ_LAB_HOST>>.perfectomobile.com/nexperience/perfectomobile/wd/hub
#remote.port=80
#driver.name=perfectoRemoteDriver

#remove from comment and set eclipse/intellij if you are using perfecto lab plugin 
#driver.pluginType=intellij
#you can override this property from config file by providing "browser" parameter
#TODO
#perfecto.capabilities.user=<<CQ_LAB_USER>>
#perfecto.capabilities.password=<<CQ_LAB_PASSWORD>>
#perfecto.capabilities.automationName=Appium
#perfecto.capabilities.browserName=MobileOS
#time 
driver.init.retry.timeout=60

#webdriver.remote.session=fd313470-4e25-4122-9009-5db2ae04c98d
selenium.wait.timeout=15000
#webdriver.ie.driver=F:/Downloads/selenium/IEDriverServer_Win32_2.22.0/IEDriverServer.exe



#switch capturing screenshots on/off on checkpoint success 
selenium.success.screenshots=0

wd.command.listeners=com.quantum.listerners.PerfectoDriverListener
#we.command.listeners=
teststep.listeners=com.quantum.listerners.QuantumReportiumListener

retry.count=0

#set true to fill bean randomly from set of test-data
#bean.populate.random=false

#set 1 to suppress success log, when 0 it will also show verification success message
report.log.skip.success=0
#uselesscomment
